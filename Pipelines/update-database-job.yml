parameters:
# - name: dbContextName
- name: dependsOn
  type: object
# - name: dotnetVersion
#   default: '8.x'
# - name: dotnetEfToolVersion
#   default: 8.0.2
- name: displayName
  default: Update Database
- name: environment
- name: jobName
  default: update_databases
- name: migrationConnectionString
- name: artifactName
- name: subscription
# - name: projectNamePrefix

jobs:
- job: ${{ parameters.jobName }}
  ${{ if parameters.dependsOn }}:
    dependsOn: '${{ parameters.dependsOn }}'
  displayName: ${{ parameters.displayName }}
  ${{ if in( parameters['environment'], 'test', 'acceptance') }}:
    pool: 'enigmatry-hosted-windows-agents-${{ parameters.environment }}'
  ${{ if notIn( parameters['environment'], 'test', 'acceptance') }}:
    pool: 'enigmatry-hosted-windows-agents-production'
  steps:

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: '${{ parameters.artifactName }}-migrations-$(Build.BuildNumber)'
        targetPath: '$(Pipeline.Workspace)'

    - task: SqlAzureDacpacDeployment@1
      inputs:
        azureSubscription: ${{ parameters.subscription }}
        AuthenticationType: 'connectionString'
        ConnectionString: ${{ parameters.migrationConnectionString }}
        deployType: 'SqlTask'
        SqlFile: '$(Pipeline.Workspace)\**\migrations.sql' 
        IpDetectionMethod: 'AutoDetect'
        
    # - task: UseDotNet@2
    #   displayName: Install .net ${{ parameters.dotnetVersion }}
    #   inputs:
    #     packageType: 'sdk'
    #     version: ${{ parameters.dotnetVersion }}
    # - task: DotNetCoreCLI@2
    #   displayName: New Manifest for EF tool
    #   inputs:
    #     command: custom
    #     custom: new
    #     arguments: tool-manifest
    # - task: DotNetCoreCLI@2
    #   displayName: Install EF Tool
    #   inputs:
    #     command: custom
    #     custom: tool
    #     arguments: install dotnet-ef --version ${{ parameters.dotnetEfToolVersion }}
    # - task: DotNetCoreCLI@2
    #   displayName: 'Update Database'
    #   inputs:
    #     command: custom
    #     custom: ef
    #     arguments: 'database update --verbose --configuration Release --context ${{ parameters.dbContextName }} --startup-project ${{ parameters.projectNamePrefix }}.Data.Migrations --project ${{ parameters.projectNamePrefix }}.Data.Migrations -- "${{ parameters.migrationConnectionString }}"'

