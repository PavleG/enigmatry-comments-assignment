parameters:
# - name: dbContextName
- name: dependsOn
  type: object
- name: dotnetVersion
  default: '8.x'
- name: displayName
  default: Update Database
- name: environment
- name: jobName
  default: update_databases
- name: migrationConnectionString
- name: artifactName
# - name: subscription

jobs:
- job: ${{ parameters.jobName }}
  ${{ if parameters.dependsOn }}:
    dependsOn: '${{ parameters.dependsOn }}'
  displayName: ${{ parameters.displayName }}
  ${{ if in( parameters['environment'], 'test', 'acceptance') }}:
    pool: 'enigmatry-hosted-windows-agents-${{ parameters.environment }}'
  ${{ if notIn( parameters['environment'], 'test', 'acceptance') }}:
    pool: 'enigmatry-hosted-windows-agents-production'
  steps:
    - task: UseDotNet@2
      displayName: Install .net ${{ parameters.dotnetVersion }}
      inputs:
        packageType: 'sdk'
        version: ${{ parameters.dotnetVersion }}
    # - task: PowerShell@2
    #   displayName: Install Sql Server PS Module
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       if ($Null -eq (Get-PackageProvider -Name NuGet -ErrorAction Ignore)) {
    #           Install-PackageProvider -Name NuGet -Force -Scope CurrentUser;
    #       }
    #       Install-Module -Name SQLServer -Force -Scope CurrentUser

    - task: DownloadPipelineArtifact@2
      displayName: Download migrations artifact
      inputs:
        buildType: 'current'
        artifactName: '${{ parameters.artifactName }}-migrations-$(Build.BuildNumber)'
        targetPath: '$(Pipeline.Workspace)'

    - task: CmdLine@2
      inputs:
        script: $(Pipeline.Workspace)\efbundle.exe --connection ${{ parameters.migrationConnectionString }}

    # - task: SqlAzureDacpacDeployment@1
    #   displayName: Execute migration scripts
    #   inputs:
    #     azureSubscription: ${{ parameters.subscription }}
    #     AuthenticationType: 'connectionString'
    #     ConnectionString: ${{ parameters.migrationConnectionString }}
    #     deployType: 'SqlTask'
    #     SqlFile: '$(Pipeline.Workspace)\**\migrations.sql' 
    #     IpDetectionMethod: 'AutoDetect'
