// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------;
/* eslint-disable */
import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { FormlyFieldConfig } from '@ngx-formly/core';
import { IGetUserDetailsResponse } from 'src/app/api/api-reference';
import { IHideExpressionDictionary } from '@enigmatry/angular-building-blocks/form';


@Component({
  selector: 'app-g-user-edit',
  templateUrl: './user-edit-generated.component.html',
  styleUrls: ['./user-edit-generated.component.scss']
})
export class UserEditGeneratedComponent implements OnInit {

  @Input() model: IGetUserDetailsResponse = {} as IGetUserDetailsResponse;
  @Input() set isReadonly(value: boolean) {
    this._isReadonly = value;
    this.fields = this.initializeFields();
  }
  get isReadonly() {
    return this._isReadonly;
  }

  @Input() saveButtonText: string = 'Save';
  @Input() cancelButtonText: string = 'Cancel';
  @Input() formButtonsTemplate: TemplateRef<any> | null | undefined;

  @Input() fieldsHideExpressions: IHideExpressionDictionary<IGetUserDetailsResponse> | undefined = undefined;

  @Output() save = new EventEmitter<IGetUserDetailsResponse>();
  @Output() cancel = new EventEmitter<void>();

  _isReadonly: boolean;
  form = new FormGroup({});
  fields: FormlyFieldConfig[] = [];

  constructor() { }

  ngOnInit(): void {
    this.fields = this.initializeFields();
  }

  onSubmit() {
    if (this.form.valid) {
      this.save.emit(this.model);
    }
  }

  initializeFields(): FormlyFieldConfig[] {
    return [
        {
        type: 'fieldset',
        fieldGroupClassName: '',
        templateOptions: {
        label: $localize `:@@users.user-edit.user.label:User`,
        placeholder: $localize `:@@users.user-edit.user.placeholder:User`,
        disabled: this.isReadonly || false,
        description: ''
        },
        fieldGroup:[
        {
        key: 'userName',
        type: 'input',
        className: '',
        hideExpression: this.fieldsHideExpressions?.userName ?? false,
        templateOptions: {
        label: $localize `:@@users.user-edit.user-name.label:User name`,
        placeholder: $localize `:@@users.user-edit.user-name.placeholder:User name`,
        disabled: this.isReadonly || true,
        description: '',
        appearance: 'standard',
        hidden: !true,
        },
        },
        {
        key: 'name',
        type: 'input',
        className: '',
        hideExpression: this.fieldsHideExpressions?.name ?? false,
        templateOptions: {
        label: $localize `:@@users.user-edit.name.label:Name`,
        placeholder: $localize `:@@users.user-edit.name.placeholder:Name`,
        disabled: this.isReadonly || false,
        description: '',
        appearance: 'standard',
        hidden: !true,
required: true,
minLength: 5,
maxLength: 25,
        },
        },
        {
        type: 'fieldset',
        fieldGroupClassName: '',
        templateOptions: {
        label: $localize `:@@users.user-edit.history.label:History`,
        placeholder: $localize `:@@users.user-edit.history.placeholder:History`,
        disabled: this.isReadonly || false,
        description: ''
        },
        fieldGroup:[
        {
        key: 'createdOn',
        type: 'datepicker',
        className: '',
        hideExpression: this.fieldsHideExpressions?.createdOn ?? false,
        templateOptions: {
        label: $localize `:@@users.user-edit.created-on.label:Created on`,
        placeholder: $localize `:@@users.user-edit.created-on.placeholder:Created on`,
        disabled: this.isReadonly || true,
        description: '',
        appearance: 'standard',
        hidden: !true,
        },
        },
        {
        key: 'updatedOn',
        type: 'datepicker',
        className: '',
        hideExpression: this.fieldsHideExpressions?.updatedOn ?? false,
        templateOptions: {
        label: $localize `:@@users.user-edit.updated-on.label:Updated on`,
        placeholder: $localize `:@@users.user-edit.updated-on.placeholder:Updated on`,
        disabled: this.isReadonly || true,
        description: '',
        appearance: 'standard',
        hidden: !true,
        },
        },
        ]
        },
        ]
        },
    ];
  }
}